version: '3.9'

services:
  mongo1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongo1
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - mongo1_data:/data/db
      - mongo1_config:/data/configdb
    networks:
      - mongo_ha_rs_network

  mongo2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongo2
    ports:
      - 27018:27017
    volumes:
      - mongo2_data:/data/db
      - mongo2_config:/data/configdb
    networks:
      - mongo_ha_rs_network

  mongo3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongo3
    ports:
      - 27019:27017
    volumes:
      - mongo3_data:/data/db
      - mongo3_config:/data/configdb
    networks:
      - mongo_ha_rs_network

  backup_service:
    build: 
      context: ./backup
      dockerfile: Dockerfile.backup_service
    container_name: backup_service
    environment:
      - MONGO_REPLICA_SET_NAME=${MONGO_REPLICA_SET_NAME}
      - MONGO_REPLICA_SET_HOSTS=${MONGO_REPLICA_SET_HOSTS}
      - MONGO_BACKUP_USER=${MONGO_BACKUP_USER}
      - MONGO_BACKUP_PASSWORD=${MONGO_BACKUP_PASSWORD}
      - MONGO_AUTHENTICATION_DATABASE=${MONGO_AUTHENTICATION_DATABASE}
      - MONGO_BACKUP_FROM=${MONGO_BACKUP_FROM}
    volumes:
      - C:/code/_testing/mongo7_replica_set_docker/backup/test:/mongodb_backup
    networks:
      - mongo_ha_rs_network

volumes:
  mongo1_data:
    name: mongo1_data
  mongo1_config:
    name: mongo1_config
  mongo2_data:
    name: mongo2_data
  mongo2_config:
    name: mongo2_config
  mongo3_data:
    name: mongo3_data
  mongo3_config:
    name: mongo3_config

networks:
  mongo_ha_rs_network:
    driver: bridge